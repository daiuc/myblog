[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About me",
    "section": "",
    "text": "Genetics, Genomics and Systems Biology\n\nUniversity of Chicago\n\n\n\n\n\nResearch Associate  University of Chicago\n\n09/20 - present  Chicago, IL\n\n\nReprehenderit sint non aliquip enim fugiat magna ex quis id. Aute consectetur consequat eiusmod cillum ullamco et irure consequat esse. Sint occaecat sint incididunt ea ullamco sit velit. Labore officia culpa culpa ea. Excepteur id consequat aliqua veniam labore ad enim nulla. Ad elit Lorem excepteur excepteur incididunt.\n\n\nResearch Associate  New York Genome Center | New York University\n\n08/18 - 08/20  New York, NY\n\n\nSint ex eu proident enim. Lorem sint veniam tempor mollit velit sunt exercitation sit laboris velit nulla in laborum non. Sit sunt reprehenderit labore fugiat consequat anim. Cillum consequat eiusmod velit id occaecat tempor ullamco proident ut occaecat.\nAnd more…"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "“Good questions outrank easy answers.”  Paul Samuelson",
    "section": "",
    "text": "My HPC workflow setup\n\n\n\n\n\n\n\ntips\n\n\ndata science\n\n\npython\n\n\njupyter\n\n\nrstudio\n\n\n\n\n\n\n\n\n\n\n\nSep 25, 2022\n\n\nChao\n\n\n\n\n\n\n  \n\n\n\n\nUseful vscode settings\n\n\n\n\n\n\n\ncode vscode setup tips\n\n\n\n\n\n\n\n\n\n\n\nSep 12, 2022\n\n\nChao\n\n\n\n\n\n\n  \n\n\n\n\nLinux terminal set up - zsh, vim, and tmux\n\n\n\n\n\n\n\nlinux\n\n\nzsh\n\n\nvim\n\n\ntmux\n\n\n\n\n\n\n\n\n\n\n\nSep 10, 2022\n\n\nChao\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nAug 27, 2022\n\n\nChao\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2022-09-10-tmux-zsh-vim-setup/index.html",
    "href": "posts/2022-09-10-tmux-zsh-vim-setup/index.html",
    "title": "Linux terminal set up - zsh, vim, and tmux",
    "section": "",
    "text": "Set up of zsh, vim, and tmux…coming soon."
  },
  {
    "objectID": "posts/2022-09-12-useful-vscode-settings/index.html",
    "href": "posts/2022-09-12-useful-vscode-settings/index.html",
    "title": "Useful vscode settings",
    "section": "",
    "text": "…"
  },
  {
    "objectID": "posts/2022-09-25-my-hpc-workflow-setup/index.html",
    "href": "posts/2022-09-25-my-hpc-workflow-setup/index.html",
    "title": "My HPC workflow setup",
    "section": "",
    "text": "code-server\nsingularity and docker image\nsnakemake\nconda\n\n\nSet up code-server\nThe purpose of code-server is to enable remote development. Once set up, you can run vscode from browser.\n\n1. Download code-server binary\nDownload the latest binary from code-server github page and install to your preferred local path, e.g. $HOME/bin.\n\n\n2. Install extensions\nInstall desired extensions with code-server --install-extension. Search extensions on Open VSX Registry. For example, here are my installed extensions:\n\n\n\n\n    akamud.vscode-theme-onelight\n    Ikuyadeu.r\n    ms-python.python\n    ms-toolsai.jupyter\n    ms-toolsai.jupyter-keymap\n    ms-toolsai.jupyter-renderers\n    PKief.material-icon-theme\n    quarto.quarto\n    RDebugger.r-debugger\n    snakemake.snakemake-lang\n    streetsidesoftware.code-spell-checker\n    vscodevim.vim\n    zhuangtongfa.material-theme\n\n\n\n\n\n3. Configurations\nConfigure code-server with a config yaml file at $HOME/.config/code-server/config.yaml.\n\n\n\n\nbind-addr: {IP}:{PORT}\n#auth: none\nauth: password\nrashed-password: YOUR-HASHED-PASSWORD\ncert: true\ncert-key: /path/to/your/cert/if/cert/is/set/to/true\n\n\n\n\n\n4. start code-server\nSimply start code-server with code-server PATH/TO/YOUR/WORKSPACE\n\n\n\n\nconda and snakemake\nInstall conda to create appropriate environment. For instance, I created a smk environment and installed python 3.9, jupyterlab, r-base 4.1.0 and snakemake 6.12.3\n\n\n\nsingularity and docker image\nI built a docker image on my mac based on the rocker/rstudio docker image. Because docker requires root, it is not available on HPCs. Thus I built a sif image using singularity (now re-branded as apptainer). The purpose of this container is to run my own rstudio server on HPC.\nI used singularity to bind $HOME and scratch directory. When running the container, instead of using the r binary in the container, I used the r binary in smk environment. This ensures that rstudio run in the container leverages the same R and R library.\n\n1. Build a sif from docker image\nsingularity pull bajiame/rstudio:R4.1.0-Rstudio554\n\n\n2. Create rstudio server temp directory\nRstudio server cache some temp data thus we need to create some directories before running the container. Make sure the following binding paths exist on the host OS.\n\n\n\n\n    --bind $TMPDIR/var/lib:/var/lib/rstudio-server \\\n    --bind $TMPDIR/var/run:/var/run/rstudio-server \\\n    --bind $TMPDIR/tmp:/tmp \\\n    --bind $TMPDIR/database.conf:/etc/rstudio/database.conf \\\n\n\n\n\n\n3. Configure sbatch scricpt\nConfigure an sbatch script similar to below.\n\n\n\n\n## set SIF\nSIF=\"PATH/TO/rstudio_R4.1.0-Rstudio554.sif\"\nTMPDIR={YOUR_TEMP_DIR_FOR_RSTUDIO}\n\n# set conda, R, python binary\nCONDA_PREFIX={YOUR_CONDA_ENV_PATH}\nR_BIN=$CONDA_PREFIX/bin/R\nPY_BIN=$CONDA_PREFIX/bin/python\n\n## export conda environment to container\nexport SINGULARITYENV_USER={YOUR_USER_NAME}\nexport SINGULARITYENV_RSTUDIO_WHICH_R=${R_BIN}\nexport SINGULARITYENV_CONDA_PREFIX=${CONDA_PREFIX}\nexport SINGULARITYENV_PATH={YOUR_PATHS_TO_APPEND}\nexport SINGULARITYENV_CACHEDIR=\"{YOUR/singularity_cache}\"\n\nRSTUDIO_SERVER_USER=chaodai # change to your own\n\n## run container app\nPASSWORD='{CHOSE_YOUR_PASSWORD}' singularity exec \\\n    --bind $TMPDIR/var/lib:/var/lib/rstudio-server \\\n    --bind $TMPDIR/var/run:/var/run/rstudio-server \\\n    --bind $TMPDIR/tmp:/tmp \\\n    --bind $TMPDIR/database.conf:/etc/rstudio/database.conf \\\n    --bind /sys/fs/cgroup/:/sys/fs/cgroup/:ro \\\n    --bind {YOUR_HOME_DIR}:/home/rstudio \\\n    --bind /project2/{LAB}:/project2/{LAB} \\\n    $SIF \\\n    rserver --server-user $RSTUDIO_SERVER_USER \\\n        --rsession-which-r=${R_BIN} \\\n        --www-port=${RPORT} \\\n        --auth-none=0 \\\n        --auth-pam-helper-path=pam-helper \\\n        --auth-timeout-minutes=0 \\\n        --auth-stay-signed-in-days=30 \\\n        --secure-cookie-key-file={/CREATE_YOUR/secure-cookie-key}\n\n\n\n\n\nCreate compute node and start container\nUse your sbatch script to request a compute node and start your rstudio server.\nIn my sbatch script, I essentially run these commands:\n\nfirst, activate smk environment\nsecond, start jupyter lab, note this is run directly on compute node\nfinally, start singularity container and run rstudio. Note rstudio is run inside a container on the compute node\n\nNote, since compute node is behind firewall, I need to access jupyter and rstudio servers via VPN or port forwarding.\n\n\n\n\nTypical workflow\nAfter the set up, the typical workflow works like this:\n\nSSH into login node, and spin up code-server. Note this step is no longer required once the server is up and running.\nAccess vscode via the code-server URL on the login node.\nSubmit the sbatch script to spin up both jupyter lab and rstudio servers on the same compute node\nTo access jupyter and rstudio there are two options:\n\nVPN\nport-forward using SSH or vscode desktop app."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/welcome/index.html#header-1",
    "href": "posts/welcome/index.html#header-1",
    "title": "Welcome To My Blog",
    "section": "Header 1",
    "text": "Header 1"
  },
  {
    "objectID": "posts/welcome/index.html#header-2",
    "href": "posts/welcome/index.html#header-2",
    "title": "Welcome To My Blog",
    "section": "Header 2",
    "text": "Header 2"
  },
  {
    "objectID": "slides/2022-09-23-snakemake-quarto.html#agenda",
    "href": "slides/2022-09-23-snakemake-quarto.html#agenda",
    "title": "Ciao Chao",
    "section": "Agenda",
    "text": "Agenda\n\nSet up midway2/3 environment\nReproducible workflow\nScientific writing with quarto\nPublish your project website"
  },
  {
    "objectID": "slides/2022-09-23-snakemake-quarto.html#my-midway2-environment",
    "href": "slides/2022-09-23-snakemake-quarto.html#my-midway2-environment",
    "title": "Ciao Chao",
    "section": "My midway2 environment",
    "text": "My midway2 environment\n\nconda:\n\ninstall miniconda to scratch\nset up env: e.g. smk - binaries and packages, e.g. R, python, jupyter, snakemake\n\nanalyses:\n\njupyter lab\nRstudio & R via singularity\nCustom start-up script to launch jupyter lab and rstudio in a compute node\n\nshell config\n\nzsh/bash profile (PATH)\n.R.environ\nvscode / code-server + extensions"
  },
  {
    "objectID": "slides/2022-09-23-snakemake-quarto.html#my-hpc-environment-demo",
    "href": "slides/2022-09-23-snakemake-quarto.html#my-hpc-environment-demo",
    "title": "Ciao Chao",
    "section": "My HPC environment demo",
    "text": "My HPC environment demo"
  },
  {
    "objectID": "slides/2022-09-23-snakemake-quarto.html#reproducible-pipeline",
    "href": "slides/2022-09-23-snakemake-quarto.html#reproducible-pipeline",
    "title": "Ciao Chao",
    "section": "Reproducible pipeline",
    "text": "Reproducible pipeline\n\ncookiecutter - set up project skeleton\nsnakemake: manage workflow\nquarto: data analysis and plots"
  },
  {
    "objectID": "slides/2022-09-23-snakemake-quarto.html#reproducible-pipeline---demo",
    "href": "slides/2022-09-23-snakemake-quarto.html#reproducible-pipeline---demo",
    "title": "Ciao Chao",
    "section": "Reproducible pipeline - demo",
    "text": "Reproducible pipeline - demo\n\nuse cookiecutter to create a snakemake-quarto repository\nrun a simple snakemake rule\n\nconfig profiles\nconfig yaml\nconda environment\n\ndemo a real project"
  },
  {
    "objectID": "slides/2022-09-23-snakemake-quarto.html#scientific-writing-with-quarto",
    "href": "slides/2022-09-23-snakemake-quarto.html#scientific-writing-with-quarto",
    "title": "Ciao Chao",
    "section": "Scientific writing with quarto",
    "text": "Scientific writing with quarto\nBenefits:\n\n\n\nwrite in markdown instead of LaTeX\ncross reference\nintegration with citation manager such as zotero\ntable/figure generation via code chunks\npublish to github page\n\n\n\nfully compatible with pandoc\nsimultaneously output to multiple format (html, pdf, docx, etc.)\nfully extensible with html / latex should you need finer control"
  },
  {
    "objectID": "slides/2022-09-23-snakemake-quarto.html#scientific-writing---quick-demo",
    "href": "slides/2022-09-23-snakemake-quarto.html#scientific-writing---quick-demo",
    "title": "Ciao Chao",
    "section": "Scientific writing - quick demo",
    "text": "Scientific writing - quick demo"
  },
  {
    "objectID": "slides/2022-09-23-snakemake-quarto.html#set-up-your-project-website",
    "href": "slides/2022-09-23-snakemake-quarto.html#set-up-your-project-website",
    "title": "Ciao Chao",
    "section": "Set up your project website",
    "text": "Set up your project website\nBenefits:\n\ndocument your project progression\norganize your notes (use Notion)\nshare and communicate your results"
  },
  {
    "objectID": "slides/2022-09-23-snakemake-quarto.html#set-up-your-project-website---demo",
    "href": "slides/2022-09-23-snakemake-quarto.html#set-up-your-project-website---demo",
    "title": "Ciao Chao",
    "section": "Set up your project website - demo",
    "text": "Set up your project website - demo\nKas-seq site"
  }
]